{"mortality/in_icu/first_24h": {"name": "mortality/in_icu/first_24h", "data": {"task.yaml": {"metadata": {"description": "This file specifies the base configuration for the prediction of in ICU mortality, leveraging only the first 24 hours of data after ICU admission, with a 24 hour gap between the input window and the target window. Patients who die or are discharged from the ICU in the gap window are excluded. Patients who die in the same hospital stay but in a subsequent ICU stay are **not** positive labels for this task. Note that this task is in-**ICU** mortality, not in-**hospital** mortality or **30-day** mortality, which are different tasks. Note that this task is predicting the outcome for a patient's entire ICU admission, not just the first 24 hours or the subsequent 24 hours after the trigger event. Imminent mortality (on various time-scales) are different tasks.", "links": [], "contacts": [{"name": "Matthew McDermott", "github_username": "mmcdermott"}], "supported_datasets": ["MIMIC-IV"]}, "predicates": {"icu_admission": "???", "icu_discharge": "???", "death": {"code": {"regex": "MEDS_DEATH.*"}}, "discharge_or_death": {"expr": "or(icu_discharge, death)"}}, "trigger": "icu_admission", "windows": {"input": {"start": null, "end": "trigger + 24h", "start_inclusive": true, "end_inclusive": true, "index_timestamp": "end"}, "gap": {"start": "trigger", "end": "start + 48h", "start_inclusive": false, "end_inclusive": true, "has": {"icu_admission": "(None, 0)", "discharge_or_death": "(None, 0)"}}, "target": {"start": "gap.end", "end": "start -> discharge_or_death", "start_inclusive": false, "end_inclusive": true, "label": "death"}}}}, "children": []}, "mortality/in_icu": {"name": "mortality/in_icu", "data": {"README.md": "# In-ICU Mortality Prediction\n\nThis task is to predict whether a patient will die in the ICU based on data from within only a limited time\nwindow after ICU admission. In-ICU mortality prediction can be used as a proxy signal for the patient's\noverall level of wellness and thus effective monitoring needs. Likely due to the availability of this target,\nrather than the true possible intervention surface offered by this task, it has been a widely used prediction\ntarget in the ML for healthcare literature to date.\n"}, "children": ["mortality/in_icu/first_24h"]}, "mortality": {"name": "mortality", "data": {"README.md": "# Mortality Prediction\n\nThis folder contains tasks for predicting mortality in patients in a variety of clinical contexts. Mortality\nis a common prediction target because\n\n1. The \"death\" label is unambiguous, clearly important, and (often) easy to collect.\n2. Mortality is a common outcome in clinical research, and many studies have collected data that can be used\n    to predict mortality.\n3. Mortality prediction within specific time-frames can be used as a proxy for the need for greater clinical\n    attention on select patients, and mortality has accordingly been used as a training proxy for the\n    development of clinical risk scores in various settings. We do not advocate this use of mortality in all\n    contexts, but it is a common use-case for mortality prediction tasks.\n"}, "children": ["mortality/in_icu"]}, ".": {"name": ".", "data": {"README.md": "# Task Criteria Files\n\nThis folder contains the dataset-agnostic criteria files for a collection of pre-defined tasks. These tasks\nare nested, and the overall \"task name\" should reflect that nesting -- e.g., the file\n`mortality/in_hospital/first_24h.yaml` is the configuration for the `mortality/in_hospital/first_24h` task.\n\nEach directory in this structure should contain a `README.md` file that describes that sub-collection of\ntasks.\n\nAll task criteria files are [ACES](https://github.com/justin13601/ACES) task-configuration `yaml` files. The\ncurrent version of ACES supported by these files can be seen in the `pyproject.toml` file in the root of this\nrepository. Currently, all tasks should be interpreted as _binary classification_ tasks. When run through the\nACES-CLI tool in `meds` format, the output files will be in the `meds` `label` schema, with the label for the\ntask appearing in the `boolean_label` column. For the current version of `meds` supported, see the\n`pyproject.toml` file in the root of this repository.\n\nTask criteria files should each contain a free-text `description` key describing the task.\n"}, "children": ["mortality", "abnormal_lab", "abnormal_lab", "abnormal_lab"]}, "abnormal_lab/blood_chemistry/metabolic_acidosis/first_24h": {"name": "abnormal_lab/blood_chemistry/metabolic_acidosis/first_24h", "data": {"task.yaml": {"metadata": {"description": "This task predicts whether the patient will have low _bicarbonate_ values (metabolic acidosis) within the next 24 hours, given the first 24 hours of their admission to the hospital. To be included, 1) patients must have at least one measurement for _bicarbonate_ within the next 24 hours after their admission to the hospital, 2) patients must not have shown low _bicarbonate_ values previously, and 3) their length of stay in the hospital must be at least 48 hours.", "links": [], "contacts": [{"name": "Jungwoo Oh", "github_username": "jwoo5"}], "supported_datasets": ["MIMIC-IV"]}, "predicates": {"birth": {"code": {"regex": "MEDS_BIRTH.*"}}, "death": {"code": {"regex": "MEDS_DEATH.*"}}, "icu_admission": "???", "icu_discharge": "???", "hospital_discharge": "???", "discharge_or_death": {"expr": "or(icu_discharge, death, hospital_discharge)"}, "bicarbonate_meql": {"code": "???"}, "abnormally_low_bicarbonate_meql_range": {"code": null, "value_min": null, "value_max": 22, "value_max_inclusive": false}, "abnormally_low_bicarbonate_meql": {"expr": "and(bicarbonate_meql, abnormally_low_bicarbonate_meql_range)"}}, "trigger": "hospital_admission", "windows": {"input": {"start": null, "end": "trigger + 24h", "start_inclusive": true, "end_inclusive": true, "index_timestamp": "end", "has": {"abnormally_low_bicarbonate_meql": "(None, 0)"}}, "no_discharge": {"start": "trigger", "end": "start + 48h", "start_inclusive": false, "end_inclusive": true, "has": {"hospital_admission": "(None, 0)", "discharge_or_death": "(None, 0)"}}, "no_children": {"start": "end - 6570d", "end": "trigger", "start_inclusive": true, "end_inclusive": true, "has": {"birth": "(None, 0)"}}, "target": {"start": "input.end", "end": "start + 24h", "start_inclusive": false, "end_inclusive": true, "has": {"bicarbonate_meql": "(1, None)"}, "label": "abnormally_low_bicarbonate_meql"}}}}, "children": []}, "abnormal_lab": {"name": "abnormal_lab", "data": {"README.md": "# Abnormal Lab\n\nThis folder contains tasks for predicting abnormal lab results. Such tasks can be useful for:\n\n1. Identifying patients who are at risk of developing a disease by using lab results as digital biomarkers.\n2. Eliminating the need to perform costly or invasive tests by using predicted lab results based on less\n    expensive or risky tests as a proxy.\n"}, "children": ["abnormal_lab/blood_chemistry/metabolic_acidosis/first_24h", "abnormal_lab/blood_chemistry/hyponatremia/first_24h", "abnormal_lab/blood_chemistry/elevated_creatinine/first_24h"]}, "abnormal_lab/blood_chemistry/hyponatremia/first_24h": {"name": "abnormal_lab/blood_chemistry/hyponatremia/first_24h", "data": {"task.yaml": {"metadata": {"description": "This task predicts whether the patient will have low _sodium_ values (hyponatremia) within the next 24 hours, given the first 24 hours of their admission to the _hospital_. To be included, 1) patients must have at least one measurement for _sodium_ within the next 24 hours after their admission to the hospital, 2) patients must not have shown low _sodium_ values previously, and 3) their length of stay in the hospital must be at least 48 hours.", "links": [], "contacts": [{"name": "Jungwoo Oh", "github_username": "jwoo5"}], "supported_datasets": ["MIMIC-IV"]}, "predicates": {"hospital_admission": "???", "hospital_discharge": "???", "birth": {"code": {"regex": "MEDS_BIRTH.*"}}, "death": {"code": {"regex": "MEDS_DEATH.*"}}, "discharge_or_death": {"expr": "or(death, hospital_discharge)"}, "sodium_meql": {"code": "???"}, "abnormally_low_sodium_meql_range": {"code": null, "value_min": null, "value_max": 135, "value_max_inclusive": false}, "abnormally_low_sodium_meql": {"expr": "and(sodium_meql, abnormally_low_sodium_meql_range)"}}, "trigger": "hospital_admission", "windows": {"input": {"start": null, "end": "trigger + 24h", "start_inclusive": true, "end_inclusive": true, "index_timestamp": "end", "has": {"abnormally_low_sodium_meql": "(None, 0)"}}, "no_discharge": {"start": "trigger", "end": "start + 48h", "start_inclusive": false, "end_inclusive": true, "has": {"hospital_admission": "(None, 0)", "discharge_or_death": "(None, 0)"}}, "no_children": {"start": "end - 6570d", "end": "trigger", "start_inclusive": true, "end_inclusive": true, "has": {"birth": "(None, 0)"}}, "target": {"start": "input.end", "end": "start + 24h", "start_inclusive": false, "end_inclusive": true, "has": {"sodium_meql": "(1, None)"}, "label": "abnormally_low_sodium_meql"}}}}, "children": []}, "abnormal_lab/blood_chemistry/elevated_creatinine/first_24h": {"name": "abnormal_lab/blood_chemistry/elevated_creatinine/first_24h", "data": {"task.yaml": {"metadata": {"description": "This task predicts whether the patient will have elevated _creatinine_ values within the next 24 hours, given the first 24 hours of their admission to the _hospital_. To be included, 1) patients must have at least one measurement for _creatinine_ within the next 24 hours after their admission to the hospital, 2) patients must not have shown elevated _creatinine_ values previously, and 3) their length of stay in the hospital must be at least 48 hours.", "links": [], "contacts": [{"name": "Jungwoo Oh", "github_username": "jwoo5"}], "supported_datasets": ["MIMIC-IV"]}, "predicates": {"hospital_admission": "???", "hospital_discharge": "???", "birth": {"code": {"regex": "MEDS_BIRTH.*"}}, "death": {"code": {"regex": "MEDS_DEATH.*"}}, "discharge_or_death": {"expr": "or(death, hospital_discharge)"}, "creatinine_mgdl": {"code": "???"}, "abnormally_high_creatinine_mgdl_range": {"code": null, "value_min": 1.3, "value_min_inclusive": false, "value_max": null}, "abnormally_high_creatinine_mgdl": {"expr": "and(creatinine_mgdl, abnormally_high_creatinine_mgdl_range)"}}, "trigger": "hospital_admission", "windows": {"input": {"start": null, "end": "trigger + 24h", "start_inclusive": true, "end_inclusive": true, "index_timestamp": "end", "has": {"abnormally_high_creatinine_mgdl": "(None, 0)"}}, "no_discharge": {"start": "trigger", "end": "start + 48h", "start_inclusive": false, "end_inclusive": true, "has": {"hospital_admission": "(None, 0)", "discharge_or_death": "(None, 0)"}}, "no_children": {"start": "end - 6570d", "end": "trigger", "start_inclusive": true, "end_inclusive": true, "has": {"birth": "(None, 0)"}}, "target": {"start": "input.end", "end": "start + 24h", "start_inclusive": false, "end_inclusive": true, "has": {"creatinine_mgdl": "(1, None)"}, "label": "abnormally_high_creatinine_mgdl"}}}}, "children": []}}